{"version":3,"sources":["Components/Form/Form.module.css","Components/ContactsList/ContactsListItem/ContactsListItem.module.css","Components/Filter/Filter.module.css","redux/contacts/contactsOperations.js","Components/Form/Form.js","Components/ContactsList/ContactsListItem/ContactsListItem.js","redux/contacts/contactsSelectors.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","contact","addContactRequest","post","addContactSuccess","addContactError","contactId","removeContactRequest","delete","removeContactSuccess","removeContactError","Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onCheckUnique","onSubmit","reset","validateFrom","className","styles","form","this","label","htmlFor","type","pattern","title","required","placeholder","onChange","id","button","Component","connect","contactsOperations","ContactsListItem","onRemove","item","onClick","getLoading","contacts","loading","getContacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","getError","error","length","TransitionGroup","component","map","CSSTransition","timeout","classNames","changedFilter","filterLabel","ContactsView","handleCheckUniqueContact","check","find","alert","fetchContacts","in","appear","unmountOnExit","isLoading","color","height","width","message","contactsOperation"],"mappings":"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","file":"static/js/4.058254f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__1ImYY\",\"label\":\"Form_label__11hAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsListItem_button__29SFK\",\"item\":\"ContactsListItem_item__20x8l\",\"name\":\"ContactsListItem_name__2jfah\",\"item-fade-enter\":\"ContactsListItem_item-fade-enter__3It37\",\"item-fade-enter-active\":\"ContactsListItem_item-fade-enter-active__3Xwhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3Ut3n\"};","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contactsAction';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst removeContact = contactId => async dispatch => {\r\n  dispatch(removeContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(removeContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(removeContactError(error));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  removeContact,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './Form.module.css';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.onCheckUnique(this.state.name)) {\r\n      this.reset();\r\n\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  validateFrom = () => {};\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label} htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              placeholder=\"Enter name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.label} htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              placeholder=\"Enter phone number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(contactsOperations.addContact(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispathcToProps)(Form);\r\n","import styles from './ContactsListItem.module.css';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nconst ContactsListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span>\r\n        <PhoneIphoneIcon />\r\n        <span className={styles.name}> {name} : </span>\r\n        <span className={styles.number}>{number}</span>\r\n      </span>\r\n\r\n      <button className={styles.button} onClick={() => onRemove(id)}>\r\n        <HighlightOffIcon />\r\n        Remove\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport const getError = state => state.contacts.error;\r\n","import { connect } from 'react-redux';\r\n\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport { getVisibleContacts } from '../../redux/contacts/contactsSelectors';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './ContactListFade.css';\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map(contact => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames=\"item-fade\">\r\n            <ContactsListItem\r\n              key={contact.id}\r\n              {...contact}\r\n              onRemove={() => onRemove(contact.id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(contactsOperations.removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { connect } from 'react-redux';\r\nimport styles from './Filter.module.css';\r\nimport { changedFilter } from '../../redux/contacts/contactsAction';\r\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(changedFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperation from '../redux/contacts/contactsOperations';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Form from '../Components/Form';\r\nimport ContactsList from '../Components/ContactsList';\r\nimport Filter from '../Components/Filter';\r\nimport Loader from 'react-loader-spinner';\r\nimport {\r\n  getLoading,\r\n  getContacts,\r\n  getError,\r\n} from '../redux/contacts/contactsSelectors';\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  handleCheckUniqueContact = name => {\r\n    const { contacts } = this.props;\r\n    const check = contacts.find(contact => {\r\n      return contact.name === name;\r\n    });\r\n    if (check) {\r\n      alert('Contact is already exist');\r\n      return check;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"phone-form\">\r\n          <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            classNames=\"fade\"\r\n            timeout={2000}\r\n            unmountOnExit\r\n          >\r\n            <h1 className=\"title\">Phonebook</h1>\r\n          </CSSTransition>\r\n          <Form onCheckUnique={this.handleCheckUniqueContact} />\r\n          {this.props.contacts.length > 0 && <Filter />}\r\n        </div>\r\n\r\n        <div>\r\n          {this.props.isLoading && (\r\n            <Loader\r\n              className=\"loader\"\r\n              type=\"TailSpin\"\r\n              color=\"cornflowerblue\"\r\n              height={50}\r\n              width={50}\r\n            />\r\n          )}\r\n          {this.props.error && (\r\n            <p className=\"error-message\">{this.props.error.message}</p>\r\n          )}\r\n          <ContactsList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n  isLoading: getLoading(state),\r\n  error: getError(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperation.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}